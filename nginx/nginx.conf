worker_processes 1;
error_log stderr;
pid /var/run/nginx.pid;

env REDIS_HOST;

events {
    worker_connections 1024;
}

http {
    # resolver 127.0.0.11;  # 如果使用 Docker 的內建 DNS 解析器

    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    lua_package_path "/usr/local/openresty/lualib/?.lua;;";
    lua_shared_dict my_cache 10m;

    server {
        listen       80;
        server_name  localhost;

        location / {
            root   html;
            index  index.html index.htm;
        }

        location /lua-test {
            default_type 'text/plain';
            content_by_lua_block {
                local redis = require "resty.redis"
                local red = redis:new()

                red:set_timeout(1000) -- 1 second

                local redis_host = os.getenv("REDIS_HOST")
                if not redis_host then
                    ngx.say("REDIS_HOST environment variable not set")
                    return
                end

                local ok, err = red:connect(redis_host, 6379)
                if not ok then
                    ngx.say("failed to connect: ", err)
                    return
                end

                local res, err = red:get("my_key")
                if not res then
                    ngx.say("failed to get my_key: ", err)
                    return
                end

                if res == ngx.null then
                    ngx.say("my_key not found")
                    return
                end

                ngx.say("my_key: ", res)
            }
        }
    }
}
